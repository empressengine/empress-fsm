(function(r,o){typeof exports=="object"&&typeof module<"u"?o(exports,require("empress-core")):typeof define=="function"&&define.amd?define(["exports","empress-core"],o):(r=typeof globalThis<"u"?globalThis:r||self,o(r.EmpressFSM={},r.empressCore))})(this,function(r,o){"use strict";var u=(h=>(h.Stop="stop",h.Wait="wait",h))(u||{});class _{constructor(t,e){this._executionController=t,this._currentEnterExecutionId=null,this._currentExitExecutionId=null,this._isTransitioning=!1,this._isExecutingLifecycle=!1,this._pendingUpdates=[],this._name=e.name,this._store=e.store,this._states=new Map,this._hooks=e.hooks,this._currentState=e.initialState,e.states.forEach(i=>{this._states.set(i.name,i)}),this._store.subscribe(async i=>{const s=()=>i,n=this._states.get(this._currentState);if(!(!n||!n.transitions||this._isTransitioning)){if(this._isExecutingLifecycle){if(this.getTransitionStrategy(n,"")===u.Stop&&this._currentEnterExecutionId){this._executionController.stop(this._currentEnterExecutionId),this._currentEnterExecutionId=null,this._isExecutingLifecycle=!1,await this.applyUpdate(s);return}this._pendingUpdates.push(s);return}await this.applyUpdate(s)}})}get name(){return this._name}get store(){return this._store}get currentState(){return this._currentState}get states(){return this._states}get hooks(){return this._hooks||{}}async start(){const t=this._states.get(this._currentState);if(!t)throw new Error(`Initial state '${this._currentState}' not found`);const e=o.Utils.createProxyDecorator(this._store.cloneState());this._lastStateCopy=e;const i=this.createStateMethod(this._currentState,"",this._currentState,"onEnter",e);if(i)try{this._currentEnterExecutionId=i,this._isExecutingLifecycle=!0,await this._executionController.run(i)}finally{this._currentEnterExecutionId=null,this._isExecutingLifecycle=!1,await this.applyPendingUpdates()}t.subStates&&await t.subStates.start()}update(t){this._store.update(t)}async stop(){const t=this._states.get(this._currentState);if(!t)return;const e=this.createStateMethod(this._currentState,this._currentState,"","onExit",this._lastStateCopy);e&&await this._executionController.run(e),t.subStates&&await t.subStates.stop(),this._store.subscribe(()=>{})}createStateMethod(t,e,i,s,n){var c;const a=this._states.get(t);if(!a)throw new Error(`State '${t}' not found`);if(a[s]){const l={fsmName:this._name,from:e,to:i,data:n},d=`[FSM][${s}] In ${this._name} from ${e} to ${i}`,f=this._executionController.create(a[s],l,d);if((c=this._hooks)!=null&&c[s]){const p={fsmName:this._name,from:e,to:i,data:n};this._hooks[s](p)}return f}}getTransitionStrategy(t,e){if(!t.transitionStrategy)return u.Wait;if(typeof t.transitionStrategy=="function"){const i={from:t.name,to:e,store:this._store};return t.transitionStrategy(i)}return t.transitionStrategy}async applyPendingUpdates(){for(;this._pendingUpdates.length>0;){const t=this._pendingUpdates.shift();await this.applyUpdate(t)}}async applyUpdate(t){this._store.update(t),await this.checkTransitions()}async checkTransitions(){const t=this._states.get(this._currentState);if(!(!t||!t.transitions||this._isTransitioning||this._isExecutingLifecycle)){for(const e of t.transitions)if(e.condition(this._store)){this.getTransitionStrategy(t,e.to)===u.Stop&&this._currentEnterExecutionId&&(this._executionController.stop(this._currentEnterExecutionId),this._currentEnterExecutionId=null,this._isExecutingLifecycle=!1),await this.transition(e.to);break}}}async transition(t){try{this._isTransitioning=!0;const e=this._states.get(this._currentState),i=this._states.get(t);if(!e||!i)throw new Error(`Invalid transition from '${this._currentState}' to '${t}'`);const s=this._currentState,n=this.createStateMethod(s,s,"","onExit",this._lastStateCopy);n&&(this._currentExitExecutionId=n,this._isExecutingLifecycle=!0,await this._executionController.run(n,!1),this._currentExitExecutionId=null,this._isExecutingLifecycle=!1,await this.applyPendingUpdates()),e.subStates&&e.subStates.stop(),this._currentState=t;const a=o.Utils.createProxyDecorator(this._store.cloneState());this._lastStateCopy=a;const c=this.createStateMethod(t,s,t,"onEnter",a);c&&(this._currentEnterExecutionId=c,this._isExecutingLifecycle=!0,await this._executionController.run(c),this._currentEnterExecutionId=null,this._isExecutingLifecycle=!1,await this.checkTransitions()),i.subStates&&i.subStates.start()}finally{this._isTransitioning=!1,await this.checkTransitions()}}}r.FSM=_,r.TransitionStrategy=u,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
