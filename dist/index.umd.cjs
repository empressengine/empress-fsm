(function(n,o){typeof exports=="object"&&typeof module<"u"?o(exports,require("empress-core"),require("empress-store")):typeof define=="function"&&define.amd?define(["exports","empress-core","empress-store"],o):(n=typeof globalThis<"u"?globalThis:n||self,o(n.EmpressFSM={},n.empressCore,n.empressStore))})(this,function(n,o,d){"use strict";var c=(u=>(u.Stop="stop",u.Wait="wait",u))(c||{});class _ extends o.SystemGroup{constructor(t){super(),this.chain=t}setup(t,e){}}class f{constructor(t,e){this._executionController=t,this._currentExecutionId="",this._storeStates=[],this._transitionPromise=null,this._isRunning=!1,this._name=e.name,this._storeAdapter=e.store,this._states=new Map,this._hooks=e.hooks,this._currentState=e.initialState,e.states.forEach(s=>{this._states.set(s.name,s)}),this._storeAdapter.subscribe(async()=>{this._isRunning&&(this.addStoreData(this._storeAdapter),this.processTransition())})}get name(){return this._name}get storeAdapter(){return this._storeAdapter}get store(){return console.warn("FSM.store is deprecated. Use FSM.storeAdapter instead."),{cloneState:()=>this._storeAdapter.getState(),clonePrevState:()=>this._storeAdapter.getPrevState(),update:t=>this._storeAdapter.update(t)}}get currentState(){return this._currentState}get states(){return this._states}get hooks(){return this._hooks||{}}async start(){var s;this._isRunning=!0;const t=this._states.get(this._currentState);if(!t)throw new Error(`Initial state '${this._currentState}' not found`);this.addStoreData(this._storeAdapter),this._transitionPromise=new o.DeferredPromise;const e=this.getStoreData();e&&(await this.processOnEnter(this._currentState,"",e),t.subStates&&await t.subStates.start(),this._currentStateData=e,(s=this._transitionPromise)==null||s.resolve(),await this.processTransition())}async stop(){var e;this._isRunning=!1;const t=this._states.get(this._currentState);t&&(this._executionController.stop(this._currentExecutionId),(e=this._transitionPromise)==null||e.resolve(),this.processOnExit(this._currentState,this._currentStateData),t.subStates&&await t.subStates.stop(),this._storeAdapter.unsubscribe())}async update(t){var s;if(!this._isRunning)return;const e=this._states.get(this._currentState);(e==null?void 0:e.transitionStrategy)===c.Stop&&this._executionController.stop(this._currentExecutionId),await((s=this._transitionPromise)==null?void 0:s.promise),this._storeAdapter.update(t)}async waitForTransition(){var t;await((t=this._transitionPromise)==null?void 0:t.promise)}addStoreData(t){this._storeStates.push({current:t.getState(),prev:t.getPrevState()})}getStoreData(t=!1){return t?this._storeStates.pop():this._storeStates.shift()}canTransit(t,e,s){if(!this._isRunning)return null;const r=this._states.get(t);if(!r||!r.transitions)return null;for(const i of r.transitions)if(i.condition(e,s))return i.to;return null}async processTransition(){var s;if(!this._isRunning)return;const t=this.getStoreData();if(!t)return;const e=this.canTransit(this._currentState,t.current,t.prev);e&&(this._transitionPromise=new o.DeferredPromise,await this.transition(this._currentState,e,this._currentStateData,t),this._currentStateData=t,(s=this._transitionPromise)==null||s.resolve())}async transition(t,e,s,r){const i=this._states.get(t),a=this._states.get(e);if(!i||!a)throw new Error(`State '${t}' or '${e}' not found`);this.processOnExit(t,s),await this.processOnEnter(e,t,r),a.subStates&&a.subStates.start()}processOnExit(t,e){var h;const s=this._states.get(t);if(!s)throw new Error(`State '${t}' not found`);if(!s.onExit)return;const r={fsmName:this._name,from:t,to:"",data:e},i=`[FSM][onExit] In ${this._name} from ${t}}`,a=this.extractGroups(s.onExit,r),p=this._executionController.create(a,r,i);(h=this._hooks)!=null&&h.onExit&&this._hooks.onExit(r),this._executionController.run(p,!1)}async processOnEnter(t,e,s){var h;const r=this._states.get(t);if(!r)throw new Error(`State '${t}' not found`);if(!r.onEnter)return;const i={fsmName:this._name,from:e,to:t,data:s},a=`[FSM][onEnter] In ${this._name} from ${e} to ${t}`,p=this.extractGroups(r.onEnter,i);this._currentExecutionId=this._executionController.create(p,i,a),this._currentState=t,(h=this._hooks)!=null&&h.onEnter&&this._hooks.onEnter(i),await this._executionController.run(this._currentExecutionId)}extractGroups(t,e){if(typeof t=="function"){const s=new o.SystemChain;t(s,e);const r=new _(s);return o.ServiceContainer.instance.get(o.GroupsContainer).set(_,r),[_]}else return t}}class S{constructor(t){this._store=t,this._unsubscribeFn=()=>{}}get store(){return this._store}getState(){return this._store.cloneState()}getPrevState(){return this._store.clonePrevState()}update(t){this._store.update(t)}subscribe(t){return this._unsubscribeFn=this._store.subscribe(t),this._unsubscribeFn}unsubscribe(){this._unsubscribeFn()}}class l{create(t){const e=new d.Store(t);return new S(e)}}n.EmpressStoreAdapter=S,n.EmpressStoreFactory=l,n.FSM=f,n.TransitionStrategy=c,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
